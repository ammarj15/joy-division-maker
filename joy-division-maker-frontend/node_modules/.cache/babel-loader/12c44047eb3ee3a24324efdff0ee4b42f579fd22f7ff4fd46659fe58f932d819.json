{"ast":null,"code":"var _jsxFileName = \"/Users/ammar/Projects/joy-division-maker/src/components/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/Canvas.scss';\nimport Button from './Button';\nimport History from './History';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const [imageData, setImageData] = useState(null);\n  const canvasRef = useRef(null);\n  const generateImage = async () => {\n    const response = await fetch('http://localhost:8000/api/generate-image/');\n    const data = await response.json();\n    setImageData(data.image);\n  };\n  useEffect(() => {\n    if (imageData) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const img = new Image();\n      img.onload = () => {\n        // Draw image on canvas\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      };\n      img.src = imageData;\n    }\n  }, [imageData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: generateImage,\n      children: \"Generate Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"320\",\n      height: \"320\",\n      style: {\n        border: '1px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: History.displayHistory,\n      children: \"Display History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Canvas, \"8rWPtKpbqaio/L20ruFX4MeZWic=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Button","History","jsxDEV","_jsxDEV","Canvas","_s","imageData","setImageData","canvasRef","generateImage","response","fetch","data","json","image","canvas","current","ctx","getContext","img","Image","onload","clearRect","width","height","drawImage","src","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","border","displayHistory","_c","$RefreshReg$"],"sources":["/Users/ammar/Projects/joy-division-maker/src/components/Canvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/Canvas.scss';\nimport Button from './Button';\nimport History from './History';\n\nfunction Canvas() {\n    const [imageData, setImageData] = useState(null);\n    const canvasRef = useRef(null);\n\n    const generateImage = async () => {\n        const response = await fetch('http://localhost:8000/api/generate-image/');\n        const data = await response.json();\n        setImageData(data.image);\n    };\n\n    useEffect(() => {\n        if (imageData) {\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext('2d');\n\n            const img = new Image();\n            img.onload = () => {\n                // Draw image on canvas\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            };\n            img.src = imageData;\n        }\n    }, [imageData]);\n\n    return (\n        <div>\n            <Button onClick={generateImage}>Generate Image</Button>\n            <canvas\n                ref={canvasRef}\n                width=\"320\"\n                height=\"320\"\n                style={{ border: '1px solid black' }}\n            ></canvas>\n            <button onClick={History.displayHistory}>Display History</button>\n\n            {/* Display history images */}\n        </div>\n    );\n}\n\nexport default Canvas;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,uBAAuB;AAC9B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMS,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,CAAC;IACzE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCN,YAAY,CAACK,IAAI,CAACE,KAAK,CAAC;EAC5B,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZ,IAAIS,SAAS,EAAE;MACX,MAAMS,MAAM,GAAGP,SAAS,CAACQ,OAAO;MAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MAEnC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,MAAM,GAAG,MAAM;QACf;QACAJ,GAAG,CAACK,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEP,MAAM,CAACQ,KAAK,EAAER,MAAM,CAACS,MAAM,CAAC;QAChDP,GAAG,CAACQ,SAAS,CAACN,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAACQ,KAAK,EAAER,MAAM,CAACS,MAAM,CAAC;MACzD,CAAC;MACDL,GAAG,CAACO,GAAG,GAAGpB,SAAS;IACvB;EACJ,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACIH,OAAA;IAAAwB,QAAA,gBACIxB,OAAA,CAACH,MAAM;MAAC4B,OAAO,EAAEnB,aAAc;MAAAkB,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvD7B,OAAA;MACI8B,GAAG,EAAEzB,SAAU;MACfe,KAAK,EAAC,KAAK;MACXC,MAAM,EAAC,KAAK;MACZU,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAkB;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACV7B,OAAA;MAAQyB,OAAO,EAAE3B,OAAO,CAACmC,cAAe;MAAAT,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGhE,CAAC;AAEd;AAAC3B,EAAA,CAvCQD,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAyCf,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}